// <auto-generated />
using System;
using EcommerceStore.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceStore.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240725105648_seedingdata")]
    partial class seedingdata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("EcommerceStore.Shared.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            Icon = "book",
                            Name = "books",
                            Url = "books"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "book",
                            Name = "glasses",
                            Url = "glasses"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "book",
                            Name = "bikes",
                            Url = "bikes"
                        });
                });

            modelBuilder.Entity("EcommerceStore.Shared.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            DateCreated = new DateTime(2024, 7, 25, 16, 26, 47, 958, DateTimeKind.Local).AddTicks(405),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "this is some amazing product",
                            Image = "urls",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 10.99m,
                            Price = 9.99m,
                            Title = "first product"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 3,
                            DateCreated = new DateTime(2024, 7, 25, 16, 26, 47, 958, DateTimeKind.Local).AddTicks(416),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "this is some amazing product",
                            Image = "urls",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 10.99m,
                            Price = 9.99m,
                            Title = "second product"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            DateCreated = new DateTime(2024, 7, 25, 16, 26, 47, 958, DateTimeKind.Local).AddTicks(417),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "this is some amazing product",
                            Image = "urls",
                            IsDeleted = false,
                            IsPublic = false,
                            OriginalPrice = 10.99m,
                            Price = 9.99m,
                            Title = "third product"
                        });
                });

            modelBuilder.Entity("EcommerceStore.Shared.Models.Product", b =>
                {
                    b.HasOne("EcommerceStore.Shared.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EcommerceStore.Shared.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
